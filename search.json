[{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xihang Chen. Author, maintainer.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chen X (2024). CohortSymmetry: Sequence Symmetry Analysis using OMOP CDM (Common Data Model). R package version 0.0.0.9000, https://oxford-pharmacoepi.github.io/CohortSymmetry/.","code":"@Manual{,   title = {CohortSymmetry: Sequence Symmetry Analysis using OMOP CDM (Common Data Model)},   author = {Xihang Chen},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://oxford-pharmacoepi.github.io/CohortSymmetry/}, }"},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/index.html","id":"cohortsymmetry-","dir":"","previous_headings":"","what":"Sequence Symmetry Analysis using OMOP CDM (Common Data Model)","title":"Sequence Symmetry Analysis using OMOP CDM (Common Data Model)","text":"goal CohortSymmetry carry necessary calculations Sequence Symmetry Analysis (SSA).","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sequence Symmetry Analysis using OMOP CDM (Common Data Model)","text":"can install development version CohortSymmetry GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"oxford-pharmacoepi/CohortSymmetry\")"},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Sequence Symmetry Analysis using OMOP CDM (Common Data Model)","text":"basic example carries necessary calculations Sequence Symmetry Analysis:","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/index.html","id":"create-a-reference-to-data-in-the-omop-cdm-format","dir":"","previous_headings":"Example","what":"Create a reference to data in the OMOP CDM format","title":"Sequence Symmetry Analysis using OMOP CDM (Common Data Model)","text":"CohortSymmetry package designed work data OMOP CDM (Common Data Model) format, first step create reference data using CDMConnector package. example, utilising Eunomia data set.","code":"library(CDMConnector) library(dplyr) library(DBI) library(duckdb)   db <- DBI::dbConnect(duckdb::duckdb(),                       dbdir = CDMConnector::eunomia_dir()) cdm <- cdm_from_con(   con = db,   cdm_schema = \"main\",   write_schema = \"main\" )"},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/index.html","id":"step-0-instantiate-two-cohorts-in-the-cdm-reference","dir":"","previous_headings":"Example","what":"Step 0: Instantiate two cohorts in the cdm reference","title":"Sequence Symmetry Analysis using OMOP CDM (Common Data Model)","text":"entirely user’s choice generate cohorts. Minimally, package requires two tables cdm reference cohort tables; words, columns tables contain cohort_definition_id, subject_id, cohort_start_date cohort_end_date. one wants generate two drugs cohorts cdm, DrugUtilisation recommended. example, amiodarone levothyroxine used. Famously, known positive benchmark Pratt et al.","code":"library(DrugUtilisation) library(CodelistGenerator) library(dplyr)   index_drug <- CodelistGenerator::getDrugIngredientCodes(cdm = cdm, name = \"amiodarone\") marker_drug <- CodelistGenerator::getDrugIngredientCodes(cdm = cdm, name = \"levothyroxine\")   cdm <- DrugUtilisation::generateDrugUtilisationCohortSet(     cdm = cdm,     name = \"cohort_index\",     conceptSet = index_drug   )   cdm <- DrugUtilisation::generateDrugUtilisationCohortSet(     cdm = cdm,     name = \"cohort_marker\",     conceptSet = marker_drug   )   cdm$cohort_index %>%   dplyr::glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB 0.8.1 [xihangc@Windows 10 x64:R 4.3.1/C:\\Users\\xihangc\\AppData\\Local\\Temp\\Rtmpa4YI7a\\file4bb86b696a79.duckdb] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1101, 1169, 1605, 1632, 1635, 4668, 123, 1015, 10… #> $ cohort_start_date    <date> 1982-08-22, 2012-02-20, 2019-05-12, 1988-11-13, … #> $ cohort_end_date      <date> 1982-08-22, 2012-02-20, 2019-05-12, 1988-11-14, …   cdm$cohort_marker %>%   dplyr::glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB 0.8.1 [xihangc@Windows 10 x64:R 4.3.1/C:\\Users\\xihangc\\AppData\\Local\\Temp\\Rtmpa4YI7a\\file4bb86b696a79.duckdb] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 2909, 1079, 4532, 1537, 3224, 4960, 19, 2829, 430… #> $ cohort_start_date    <date> 1999-02-12, 2016-03-05, 1964-04-03, 2010-05-31, … #> $ cohort_end_date      <date> 1999-02-12, 2016-03-05, 1964-04-03, 2010-05-31, …"},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/index.html","id":"step-1-getcohortsequence","dir":"","previous_headings":"Example","what":"Step 1: getCohortSequence","title":"Sequence Symmetry Analysis using OMOP CDM (Common Data Model)","text":"order initiate calculations, two cohorts tables need combined together. first cohort considered index cohort second marker. process filter individuals appeared tables according user-specified timeGap (default 365, can also changed Inf restriction preferred). user also freedom specify 1 IDs either table can considered process. concretely, user specifies m IDs first cohort n IDs second cohort, process output mn combinations. IDs specified IDs considered.","code":"library(CohortSymmetry)   cdm <- CohortSymmetry::getCohortSequence(cdm,                    indexTable =\"cohort_index\",                    markerTable = \"cohort_marker\",                    combinationWindow = c(0,Inf)) #> Loading required namespace: testthat   cdm$joined_cohorts %>%   dplyr::glimpse() #> Rows: ?? #> Columns: 7 #> Database: DuckDB 0.8.1 [xihangc@Windows 10 x64:R 4.3.1/C:\\Users\\xihangc\\AppData\\Local\\Temp\\Rtmpa4YI7a\\file4bb86b696a79.duckdb] #> Ordered by: index_date #> $ index_id    <int> 1 #> $ marker_id   <int> 1 #> $ subject_id  <int> 2006 #> $ index_date  <date> 2014-01-17 #> $ marker_date <date> 2017-12-31 #> $ first_date  <date> 2014-01-17 #> $ second_date <date> 2017-12-31  cdm$joined_cohorts #> # Source:     SQL [1 x 7] #> # Database:   DuckDB 0.8.1 [xihangc@Windows 10 x64:R 4.3.1/C:\\Users\\xihangc\\AppData\\Local\\Temp\\Rtmpa4YI7a\\file4bb86b696a79.duckdb] #> # Ordered by: index_date #>   index_id marker_id subject_id index_date marker_date first_date second_date #>      <int>     <int>      <int> <date>     <date>      <date>     <date>      #> 1        1         1       2006 2014-01-17 2017-12-31  2014-01-17 2017-12-31"},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/CohortSymmetry-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CohortSymmetry: Sequence Symmetry Analysis using OMOP CDM (Common Data Model) — CohortSymmetry-package","title":"CohortSymmetry: Sequence Symmetry Analysis using OMOP CDM (Common Data Model) — CohortSymmetry-package","text":"Calculating crude sequence ratio (csr), adjusted sequence ratio (asr) confidence intervals using data mapped Observational Medical Outcomes Partnership (OMOP) common data model. Calculations can also done particular disease strata stratification cohorts.","code":""},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/CohortSymmetry-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CohortSymmetry: Sequence Symmetry Analysis using OMOP CDM (Common Data Model) — CohortSymmetry-package","text":"Maintainer: Xihang Chen xihang.chen@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/getCohortSequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersecting the index and marker cohorts prior to calculating Sequence Symmetry Ratios — getCohortSequence","title":"Intersecting the index and marker cohorts prior to calculating Sequence Symmetry Ratios — getCohortSequence","text":"Join two tables CDM (one index marker cohorts) new table cdm taking account maximum time interval events. Index marker cohorts instantiated advance user.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/getCohortSequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersecting the index and marker cohorts prior to calculating Sequence Symmetry Ratios — getCohortSequence","text":"","code":"getCohortSequence(   cdm,   indexTable,   markerTable,   name = \"joined_cohorts\",   dateRange = as.Date(c(NA, NA)),   indexId = NULL,   markerId = NULL,   daysPriorObservation = 0,   washoutWindow = 0,   indexMarkerGap = NULL,   combinationWindow = c(0, 365) )"},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/getCohortSequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersecting the index and marker cohorts prior to calculating Sequence Symmetry Ratios — getCohortSequence","text":"cdm CDM reference. indexTable table CDM index cohorts come . markerTable table CDM marker cohorts come . name name within cdm output called. Default joined_cohorts. dateRange Two dates indicating study period sequences user wants restrict . indexId Cohort definition IDs indexTable considered analysis. Change NULL indices wished included. markerId Cohort definition IDs markerTable considered analysis. Change NULL markers wished included. daysPriorObservation minimum amount prior observation required index marker cohorts per person. washoutWindow washout window applied index cohort event marker cohort. indexMarkerGap time start second episode drug (either marker index) time end first episode (either marker index). combinationWindow constrain placed gap two iniations. Default c(0,365), meaning gap larger 0 less equal 365.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/getCohortSequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intersecting the index and marker cohorts prior to calculating Sequence Symmetry Ratios — getCohortSequence","text":"table cdm reference.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/getCohortSequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intersecting the index and marker cohorts prior to calculating Sequence Symmetry Ratios — getCohortSequence","text":"","code":"# \\donttest{ library(PatientProfiles) cdm <- mockPatientProfiles() cdm <- CohortSymmetry::getCohortSequence(   cdm = cdm,   indexTable = \"cohort1\",   markerTable = \"cohort2\" ) #> Loading required namespace: testthat ## default name - joined_cohorts  cdm$joined_cohorts #> # Source:   table<joined_cohorts> [2 x 7] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1019-azure:R 4.3.2/:memory:] #>   index_id marker_id subject_id index_date marker_date first_date second_date #>      <dbl>     <dbl>      <dbl> <date>     <date>      <date>     <date>      #> 1        1         1          1 2020-01-01 2019-12-30  2019-12-30 2020-01-01  #> 2        1         2          1 2020-01-01 2020-05-25  2020-01-01 2020-05-25  # }"},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/getSequenceRatios.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence ratio calculations — getSequenceRatios","title":"Sequence ratio calculations — getSequenceRatios","text":"Using getCohortSequence obtain sequence ratios desired outcomes.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/getSequenceRatios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence ratio calculations — getSequenceRatios","text":"","code":"getSequenceRatios(   cdm,   outcomeTable,   confidenceIntervalLevel = 0.025,   restriction = 548 )"},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/getSequenceRatios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence ratio calculations — getSequenceRatios","text":"cdm CDM reference. outcomeTable table CDM output getCohortSequence resides. confidenceIntervalLevel Default 0.025, central 95% confidence interval. restriction moving window calculating nSR, default 548.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/getSequenceRatios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequence ratio calculations — getSequenceRatios","text":"local table analyses.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/getSequenceRatios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence ratio calculations — getSequenceRatios","text":"","code":"# \\donttest{ library(PatientProfiles) cohort1 <- dplyr::tibble(\"cohort_definition_id\" = c(1,1,1,1,1),               \"subject_id\" = c(1,2,1,2,1),               \"cohort_start_date\" = seq(as.Date(\"2020-05-23\"), as.Date(\"2020-05-27\"), by = \"day\"),               \"cohort_end_date\" = seq(as.Date(\"2020-05-24\"), as.Date(\"2020-05-28\"), by = \"day\"))   cdm <- mockPatientProfiles(cohort1 = cohort1,                             patient_size = 10)  cdm <- CohortSymmetry::getCohortSequence(cdm = cdm,                                           indexTable = \"cohort1\",                                           markerTable = \"cohort2\")  pssa_result <- CohortSymmetry::getSequenceRatios (cdm = cdm,                                                    outcomeTable = \"joined_cohorts\") #> Warning: NSR numerator is 0, which results in a NSR = 0, proceed with caution #> Warning: NSR denominator is 0, suggesting no Marker Drug -> Index Drug or Index Drug -> Marker Drug events #> Warning: NSR numerator is 0, which results in a NSR = 0, proceed with caution #> Warning: NSR denominator is 0, suggesting no Marker Drug -> Index Drug or Index Drug -> Marker Drug events #> Warning: NSR numerator is 0, which results in a NSR = 0, proceed with caution #> Warning: NSR denominator is 0, suggesting no Marker Drug -> Index Drug or Index Drug -> Marker Drug events #> Warning: NSR numerator is 0, which results in a NSR = 0, proceed with caution #> Warning: NSR denominator is 0, suggesting no Marker Drug -> Index Drug or Index Drug -> Marker Drug events #> Warning: NSR numerator is 0, which results in a NSR = 0, proceed with caution #> Warning: NSR denominator is 0, suggesting no Marker Drug -> Index Drug or Index Drug -> Marker Drug events #> Warning: NSR numerator is 0, which results in a NSR = 0, proceed with caution #> Warning: NSR denominator is 0, suggesting no Marker Drug -> Index Drug or Index Drug -> Marker Drug events   pssa_result #>   index_id marker_id index_first marker_first csr asr lowerCSR_CI upperCSR_CI #> 1        1         3         0.5          1.0   0  NA  0.01702179    10.69607 #> 2        1         2         1.0          0.5 Inf  NA  0.09349227    58.74824 #> 3        1         1         0.5          1.0   0  NA  0.01702179    10.69607 #>   lowerASR_CI upperASR_CI cdm_name #> 1          NA          NA  PP_MOCK #> 2          NA          NA  PP_MOCK #> 3          NA          NA  PP_MOCK  CDMConnector::cdmDisconnect(cdm) # }"},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://oxford-pharmacoepi.github.io/CohortSymmetry/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
